### Estrutura das Coleções MongoDB

A aplicação utiliza uma coleção no MongoDB chamada `memories`.

**Coleção: `memories`**
Esta coleção é gerenciada pelo Mongoose e armazena as "memórias" criadas pelos usuários. A estrutura do schema é a seguinte:

- **`_id`**: `ObjectId` - Chave primária padrão gerada pelo MongoDB.
- **`id`**: `Number` - (Obrigatório) ID numérico, que serve como chave estrangeira para o ID do usuário na tabela Oracle `cyberpunk_users`.
- **`title`**: `String` - (Obrigatório) Título da memória, com no máximo 200 caracteres.
- **`memory`**: `String` - (Obrigatório) O conteúdo textual da memória.
- **`createdAt`**: `Date` - Data de criação do documento, com valor padrão para a data e hora atuais.
- **`__v`**: `Number` - Chave de versionamento interna do Mongoose.

---

### Descrição da Integração e Arquitetura

O backend do projeto é um sistema híbrido que combina um banco de dados relacional (Oracle) para autenticação de usuários com um banco de dados NoSQL (MongoDB) para dados da aplicação, além de uma integração com uma Inteligência Artificial para a funcionalidade principal do chat.

1.  **Autenticação e Usuários (Oracle DB):**
    - O fluxo de login e registro de usuários é gerenciado por um servidor Fastify.
    - Os dados dos usuários (nome, email, hash da senha) são armazenados em uma tabela `cyberpunk_users` em um banco de dados Oracle.
    - As senhas são hasheadas usando `bcrypt` antes de serem salvas, garantindo a segurança.

2.  **Chat Interativo (LangChain + OpenAI):**
    - A principal funcionalidade é um chat narrativo no estilo cyberpunk, onde uma IA conta uma história.
    - O sistema mantém um histórico da conversa para dar contexto à IA e garantir a continuidade da narrativa.
    - É salvo no banco de dados o histórico tanto da história quanto das escolhas

3.  **Armazenamento de "Memórias" (MongoDB):**
    - Usuários autenticados podem criar, visualizar, atualizar e deletar "memórias" textuais.
    - Essas memórias são documentos armazenados na coleção `memories` no MongoDB, gerenciada pelo Mongoose.
    - A ligação entre o usuário (Oracle) e a memória (MongoDB) é feita pelo campo `id` na coleção `memories`, que corresponde ao `id` do usuário na tabela `cyberpunk_users`.

---

### Tecnologias Usadas (Server)

-   **Linguagem:** JavaScript
-   **Ambiente de Execução:** Node.js
-   **Framework Backend:** Fastify
-   **Bancos de Dados:**
    -   **Oracle Database:** Para gerenciamento de usuários, acessado via driver `oracledb`.
    -   **MongoDB:** Para armazenamento de dados da aplicação (memórias), acessado via ODM `mongoose`.
-   **Autenticação:**
    -   `bcrypt` для hashing de senhas.
-   **Gerenciamento de Configuração:**
    -   `dotenv` para carregar variáveis de ambiente.
-   **Ferramentas de Desenvolvimento:**
    -   `nodemon` para recarregamento automático do servidor.